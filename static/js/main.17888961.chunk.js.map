{"version":3,"sources":["styles/keypad.module.css","styles/display.module.css","styles/calcButton.module.css","styles/delButton.module.css","styles/calculator.module.css","components/CalculatorContext.js","components/Display.js","components/CalcButton.js","components/DelButton.js","components/Keypad.js","components/Calculator.js","components/App.js","reportWebVitals.js","fonts/digital-7.ttf","index.js"],"names":["module","exports","CalculatorContext","React","createContext","InputContext","useInputContext","useContext","currentOperand","previousOperand","operation","CalculatorProvider","children","useState","displayValue","setDisplayValue","Provider","value","inputValue","preventDefault","userInput","target","toString","console","log","slice","result","prev","op","curr","previousNumber","parseFloat","currentNumber","isNaN","calculate","includes","Display","calculatorContext","className","styles","display","displayOutput","type","CalcButton","props","styleClass","label","parseInt","onClick","DelButton","delete","Keypad","deleteBtnRow","solar","keypadGrid","Calculator","calcWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17888961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"keypadGrid\":\"keypad_keypadGrid__2TcW2\",\"deleteBtnRow\":\"keypad_deleteBtnRow__2JfYp\",\"solar\":\"keypad_solar__216P7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"display_display__1zZK1\",\"displayOutput\":\"display_displayOutput__3Q5Y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"equals\":\"calcButton_equals__1T_Ai\",\"number\":\"calcButton_number__duNuW\",\"operator\":\"calcButton_operator__1XGqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"delButton_delete__2jljK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcWrapper\":\"calculator_calcWrapper__1qE02\"};","import React, { useContext, useState } from \"react\";\r\n\r\nconst CalculatorContext = React.createContext();\r\nconst InputContext = React.createContext();\r\n\r\nexport function useCalculatorContext() {\r\n    return useContext(CalculatorContext);\r\n}\r\n\r\nexport function useInputContext() {\r\n    return useContext(InputContext);\r\n}\r\n\r\nlet currentOperand = \"\";\r\nlet previousOperand = \"\";\r\nlet operation = \"\";\r\n\r\n\r\nexport function CalculatorProvider({children}){\r\n    const [displayValue, setDisplayValue] = useState(\"\");\r\n\r\n    function calculate(prev, op, curr){\r\n        let result;\r\n        const previousNumber = parseFloat(prev);\r\n        const currentNumber = parseFloat(curr);\r\n        if (isNaN(previousNumber) || isNaN(currentNumber)) return;\r\n        switch (op){\r\n            case \"÷\":\r\n                result = previousNumber / currentNumber;\r\n                break;\r\n            case \"×\":\r\n                result = previousNumber * currentNumber;\r\n                break;\r\n            case \"-\":\r\n                result = previousNumber - currentNumber;\r\n                break;\r\n            case \"+\":\r\n                result = previousNumber + currentNumber;\r\n                break;\r\n            default:\r\n                console.log(\"error\")\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getUserInput(inputValue) {\r\n        inputValue.preventDefault();\r\n        let userInput = (inputValue.target.value).toString();\r\n        switch(userInput){\r\n            case \"C\":\r\n                console.log(\"delete\");\r\n                currentOperand = currentOperand.slice(0, -1);\r\n                setDisplayValue(currentOperand);\r\n                break;\r\n            case \"AC\":\r\n                currentOperand = \"\";\r\n                previousOperand = \"\";\r\n                operation = \"\";\r\n                setDisplayValue(currentOperand);\r\n                break;\r\n            case \"÷\": case \"×\": case \"-\": case \"+\":\r\n                operation = userInput;\r\n                previousOperand = currentOperand;\r\n                currentOperand = \"\";\r\n                break;\r\n            case \"=\":\r\n                let result = calculate(previousOperand, operation, currentOperand);\r\n                if (!isNaN(result)){\r\n                    currentOperand = result.toString();\r\n                    previousOperand = \"\";\r\n                    operation = \"\";\r\n                }\r\n                setDisplayValue(result);\r\n                break;\r\n            default:\r\n                if (userInput === '.' && currentOperand.includes('.')) break;\r\n                currentOperand += userInput;\r\n                setDisplayValue(currentOperand);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CalculatorContext.Provider value={displayValue}>\r\n            <InputContext.Provider value={getUserInput}>\r\n                {children}\r\n            </InputContext.Provider>\r\n        </CalculatorContext.Provider>\r\n    )\r\n}\r\n\r\n","import styles from \"../styles/display.module.css\";\r\nimport { useCalculatorContext } from \"./CalculatorContext\"\r\n\r\nfunction Display() {\r\n  const calculatorContext = useCalculatorContext();\r\n  return (\r\n    <div className={styles.display}>\r\n      <div className={styles.displayOutput}>\r\n        <input type=\"text\" value={calculatorContext}></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;","import styles from \"../styles/calcButton.module.css\";\r\nimport { useInputContext } from \"./CalculatorContext\";\r\n\r\nfunction CalcButton(props) {\r\n  // generate custom button style\r\n  let styleClass = \"number\";\r\n\r\n  if (props.label === \"=\"){\r\n    styleClass = \"equals\";\r\n  } else if (isNaN(parseInt(props.label))) {\r\n    styleClass = \"operator\";\r\n  }\r\n\r\n  // input context\r\n  const userInput = useInputContext();\r\n  \r\n  return (\r\n    <div className={`${styles[styleClass]}`}>\r\n      <button onClick={userInput} value={props.label}>{props.label}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalcButton;\r\n","import styles from \"../styles/delButton.module.css\";\r\nimport { useInputContext } from \"./CalculatorContext\";\r\n\r\nfunction DelButton(props) {\r\n  // input context\r\n  const userInput = useInputContext();\r\n\r\n  return (\r\n    <div className={styles.delete}>\r\n      <button value={props.label} onClick={userInput}>{props.label}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DelButton;\r\n","import CalcButton from \"./CalcButton\";\r\nimport DelButton from \"./DelButton\"\r\nimport styles from \"../styles/keypad.module.css\";\r\n\r\nfunction Keypad() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={styles.deleteBtnRow}>\r\n          <span className={styles.solar}></span>\r\n          <DelButton label=\"AC\"/>\r\n          <DelButton label=\"C\"/>\r\n        </div>\r\n      </div>\r\n      <div className={styles.keypadGrid}>\r\n        <CalcButton label=\"7\"/>\r\n        <CalcButton label=\"8\"/>\r\n        <CalcButton label=\"9\"/>\r\n        <CalcButton label=\"&divide;\"/>\r\n        <CalcButton label=\"4\"/>\r\n        <CalcButton label=\"5\"/>\r\n        <CalcButton label=\"6\"/>\r\n        <CalcButton label=\"&times;\"/>\r\n        <CalcButton label=\"1\"/>\r\n        <CalcButton label=\"2\"/>\r\n        <CalcButton label=\"3\"/>\r\n        <CalcButton label=\"-\"/>\r\n        <CalcButton label=\"0\"/>\r\n        <CalcButton label=\".\"/>\r\n        <CalcButton label=\"+\"/>\r\n        <CalcButton label=\"=\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Keypad;\r\n","import Display from \"./Display\";\r\nimport Keypad from \"./Keypad\";\r\n\r\nimport styles from \"../styles/calculator.module.css\"\r\n\r\nfunction Calculator() {\r\n  return (\r\n    <div className={styles.calcWrapper}>\r\n      <Display />\r\n      <Keypad />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;","import Calculator from \"./Calculator\";\r\nimport { CalculatorProvider } from \"./CalculatorContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CalculatorProvider>\r\n        <Calculator />\r\n      </CalculatorProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/digital-7.93911ab1.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./components/App\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './fonts/digital-7.ttf';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}